syntax = "proto3";
package peering;

service PeeringNode {
  rpc Introduce (IntroductionRequest) returns (IntroductionReply);
  rpc ListPeers (ListPeersRequest) returns (ListPeersReply);

  rpc getKey (GetKeyRequest) returns (GetKeyReply);
  rpc store (StoreRequest) returns (StoreReply);
  rpc transfer (TransferRequest) returns (TransferReply);

  rpc checkHealth (HealthCheckRequest) returns (HealthCheckReply);
  rpc getDataShard (GetDataShardRequest) returns (GetDataShardReply);

  rpc shutDown (ShutDownRequest) returns (ShutDownReply);
}

message IntroductionRequest {
  string senderAdress = 1;
}

message IntroductionReply {
  repeated Peer knownPeers = 1;
}

message ListPeersRequest {}

message Peer {
  string addr = 1;
  string hash = 2;
}

message ListPeersReply {
  repeated Peer knownPeers = 1;
}

message HealthCheckRequest { }

message HealthCheckReply { }


message StoreRequest {
  string value = 1;
  uint32 hops = 2;
}

message StoreReply {
  string key = 1;
  string storedIn = 2;
}

message GetKeyRequest {
  string key = 1;
}

message GetKeyReply {
  string value = 1;
}

message KeyValuePair {
  string key = 1;
  string value = 2;
}

message TransferRequest {
  repeated KeyValuePair toStore = 1;
}

message TransferReply {
  repeated string transferredKeys = 1;
}


message GetDataShardRequest {
}

message GetDataShardReply {
  repeated KeyValuePair shard = 1;
}

message ShutDownRequest {}
message ShutDownReply {}

